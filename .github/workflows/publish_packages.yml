name: publish-packages
on:
  push:
    tags:
      - v*

jobs:
  build:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
            build: |
              yarn build
              strip -x *.node
          - host: macos-latest
            target: aarch64-apple-darwin
            build: |
              sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*;
              export CC=$(xcrun -f clang);
              export CXX=$(xcrun -f clang++);
              SYSROOT=$(xcrun --sdk macosx --show-sdk-path);
              export CFLAGS="-isysroot $SYSROOT -isystem $SYSROOT";
              yarn build --target=aarch64-apple-darwin
              strip -x *.node
    name: stable - ${{ matrix.settings.target }} - node@14
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 14
          checj-latest: true
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          target: ${{ matrix.settings.target }}
      - name: Install dependencies
        run: yarn install --ignore-scripts --registry https://registry.npmjs.org --network-timeout 300000
      - name: Build
        run: ${{ matrix.settings.build }}
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: bindings-${{ matrix.settings.target }}
          path: bengbenge.*.node
          if-no-files-found: error
    publish:
      if: ${{ startsWith(github.ref, 'refs/tags/v') }}

      name: npm
      runs-on: ubuntu-latest

      - name: Install dependencies
        run: yarn install --ignore-scripts --registry https://registry.npmjs.org --network-timeout 300000

      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: List binaries
        run: ls -R artifacts
        shell: bash

      - name: Move binaries
        shell: bash
        run: npm run artifacts

      - name: List npm
        run: ls -R ./scripts/npm
        shell: bash

      - name: Publish
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
          npm publish --access public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}